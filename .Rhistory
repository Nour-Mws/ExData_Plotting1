list.files()
save.image(c:/test/test_img.RData)
save.image("c:/test/test_img.RData")
xmat=matrix(x,nrow=2,ncol=4)
x=c(2,3,0,3,1,0,0,1)
xmat=matrix(x,nrow=2,ncol=4)
xmat
dim(xmat)
class(xmat)
setRepositories(graphics = getOption("menu.graphics"),
ind = NULL, addURLs = character())
colnames(xmat)=c("Q1","Q2","Q3","Q4")
rownames(xmat)=c("S","N")
xmat
attributes(xmat)
x=c(0,2,3,4,0,9)
x.zeros=(x==0)
x.zeros
class(x.zeros)
y=1:10
y2=seq(-10,10,by=3)
y3=rep(2,10)
y4=rep(c("A",B),3)
y4=rep(c("A","B"),3)
y
y1
y2
y3
y4
rank(x)
x1=c(7,6,3,8)
rank(x1)
order(x1)
sort(x1)
y=c(6,3)
match(y,x1)
y=c(6,8)
match(y,x1)
x=seq(-10,10,by=0.1)
plot(x,x^2-x^3)
plot(x,x^2-x^3,xlab='time',ylab='intensity')
v=c(0,-5,9,4)
if (min(v)>=0)
{
cat("no negative value in the set. \n")
xtot=cumsum(v)
}
else
{
v=c(0,-5,9,4)
if (min(v)>=0)
{
cat("no negative value in the set. \n")
xtot=cumsum(v)
}else
{
cat ("negative values available. \n")
xtot=cumsum(pmax(v,0))
}
xtot
v=c(0,-5,9,4)
if (min(v)>=0)
{
cat("no negative value in the set. \n")
xtot=cumsum(v)
}else
{
cat ("negative values available. \n")
xtot=cumsum(pmax(v,0))
}
xtot
for (i in v)
print (i)
sqr=function(x)
x*x
sqr(9)
x=-6
x^2-3*x-18
x=6
x^2-3*x-18
getwd()
mkdir data
mkdir data/
mkdir ./data/
mkdir ./data
pwd ./data
?pwd
?mkdir
??mkdir
x<-4
class(x)
x <- c(4, TRUE)
class(x)
y <- c(4, TRUE)
y
class(y)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
a=x[[1]]
class(a)
x=1:4
y=2
x+y
x
getwd(
)
file = "hw1_data"
read.csv
h=read.csv(file, header=TRUE)
file = "hw1_data.csv"
h=read.csv(file, header=TRUE)
head(h)
nrow(h)
tail(h)
h[152:153,]
h[-1:,]
h[47,]
count(h[,ozone==Nan])
h[,ozone==Nan]
h[,h$Ozone==Nan]
h[,is.null(h$Ozone)]
is.null(d)
is.null(x)
x=null
x=nan
h[,is.na(h$Ozone)]
is.na(d)
is.na(x)
is.na(h$Ozone)
h[is.na(h$Ozone),]
nrow(h[is.na(h$Ozone),])
mean(h$Ozone[not is.na(h$Ozone)])
h$Ozone[not is.na(h$Ozone)]
h$Ozone[<> is.na(h$Ozone)]
h$Ozone[! is.na(h$Ozone)]
mean(h$Ozone[! is.na(h$Ozone)])
mean(h$Solar.R[(h$Ozone>31) and (h$Temp>90)])
mean(h$Solar.R[(h$Ozone>31) & (h$Temp>90)])
mean(h$Ozone[h$Ozone>31])
mean(h$Solar.R[(h$Ozone>31) & (h$Temp>90)&(! is.na(h$Ozone))])
mean(h$Temp[h$Month==6])
max(h$Ozone[h$Month==5])
max(h$Ozone[h$Month==5 &! is.na(h$Ozone)])
nrow(h[is.na(h$Ozone),])
x <- list(2, "a", "b", TRUE)
x[1]
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
install.packages("knitr")
* Goes from raw data to data products
install.packages("KernSmooth")
copyright(kernsmooth)
??copyright
library(kernsmooth)
library(knitr)
install.packages("KernSmooth")
library(kernsmooth)
update.packages()
library(kernsmooth)
install.packages('RMySQL',type='source')
utils:::menuInstallPkgs()
q()
electricity = read.table("household_power_consumption.txt",header=T, sep=";")
setwd("~/GitHub/ExData_Plotting1")
png(filename = "plot1.png",
width = 480, height = 480)
electricity$Global_active_power = as.numeric(electricity$Global_active_power)
electricity = read.table("household_power_consumption.txt",header=T, sep=";")
png(filename = "plot1.png",
width = 480, height = 480)
electricity$Global_active_power = as.numeric(electricity$Global_active_power)
electricity$Date = strptime(electricity$Date,"%d/%m/%Y")
d = c("2007-02-01","2007-02-02")
days=strptime(d, "%Y-%m-%d")
elec = electricity[electricity$Date %in% days,]
elec$Time = strptime(elec$Time,"%H:%M:%S")
with(elec,hist(as.numeric(Global_active_power)/1000,breaks=24))
hist(c(1,2,3,1))
hist
hist()
hist(d)
hist(1,2)
hist(1,2)
plot(x,y)
plot(elec$Date, elec$Global_active_power)
dev.off()
dev.copy(png, file = "plot1.png")
with(elec,hist(as.numeric(Global_active_power)/1000,breaks=24))
dev.off()
with(elec,hist(as.numeric(Global_active_power)/1000,breaks=24))
window()
windows()
with(elec,hist(as.numeric(Global_active_power)/1000,breaks=24))
with(elec,hist(as.numeric(Global_active_power)/1000,breaks=12))
with(elec,hist(Global_active_power/1000,breaks=12,  xlim=c(0, 1200)))
with(elec,hist(Global_active_power/1000,breaks=12,  xlim=c(0, 1200)))
?hist
with(elec,hist(Global_active_power/1000,breaks=12,  ylim=c(0, 1200)))
with(elec,hist(Global_active_power/1000,xlim=c(0,6),  ylim=c(0, 1200), breaks=12))
with(elec,hist(Global_active_power/1000,xlim=c(0,6),  ylim=c(0, 1200), breaks=12, col="red"))
breaks=12, col="red", main="Global Active Power"))
png(filename = "plot1.png",
width = 480, height = 480)
with(elec,hist(Global_active_power/1000,xlim=c(0,6),  ylim=c(0, 1200),
breaks=12, col="red", main="Global Active Power"))
dev.off()
dev.off()
dev.off()
with(elec,hist(Global_active_power/1000,xlim=c(0,6),  ylim=c(0, 1200),
breaks=12, col="red", main="Global Active Power"))
with(elec,hist(Global_active_power/1000,xlim=c(0,6),  ylim=c(0, 1200),
breaks=12, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)"))
electricity$Global_active_power = as.numeric(as.character(electricity$Global_active_power))
electricity$Date = strptime(electricity$Date,"%d/%m/%Y")
d = c("2007-02-01","2007-02-02")
days=strptime(d, "%Y-%m-%d")
elec = electricity[electricity$Date %in% days,]
nrow(elec)
days
electricity$Date[1]
electricity = read.table("household_power_consumption.txt",header=T, sep=";")
electricity$Date = strptime(electricity$Date,"%d/%m/%Y")
electricity$Date[1]
d = c("2007-02-01","2007-02-02")
d = c("2007-02-01","2007-02-02")
days=strptime(d, "%Y-%m-%d")
elec = electricity[electricity$Date %in% days,]
elec$Global_active_power = as.numeric(as.character(elec$Global_active_power))
#elec$Time = strptime(elec$Time,"%H:%M:%S")
nrow(elec)
with(elec,hist(Global_active_power/1000,xlim=c(0,6),  ylim=c(0, 1200),
breaks=12, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)"))
elec$Global_active_power[1:10]
with(elec,hist(Global_active_power,xlim=c(0,6),  ylim=c(0, 1200),
breaks=12, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)"))
png(filename = "plot1.png",
width = 480, height = 480)
with(elec,hist(Global_active_power,xlim=c(0,6),  ylim=c(0, 1200),
breaks=12, col="red", main="Global Active Power",
xlab="Global Active Power (kilowatts)"))
#dev.copy(png, file = "plot1.png")
dev.off()
elec$Time = strptime(elec$Time,"%H:%M:%S")
head(elec$Time)
elec = electricity[electricity$Date %in% days,]
elec$Global_active_power = as.numeric(as.character(elec$Global_active_power))
elec$Time = strptime(paste(elec$Date,elec$Time),"%Y-%m-%d %H:%M:%S")
head(elec$Time)
elec$Time[2000]
with(elec,plot(Time,Global_active_power,
ylab="Global Active Power (kilowatts)"))
?plot
with(elec,plot(Time,Global_active_power, type = "l"
ylab="Global Active Power (kilowatts)"))
with(elec,plot(Time,Global_active_power, type = "l",
ylab="Global Active Power (kilowatts)"))
Sys.setlocale(category = "LC_ALL", locale = "")
Sys.setlocale(category = "LC_TIME", locale = "")
Sys.setlocale("LC_TIME", "English")
with(elec,plot(Time,Global_active_power, type = "l",
ylab="Global Active Power (kilowatts)"))
png(filename = "plot2.png",
width = 480, height = 480)
dev.off()
png(filename = "plot2.png",
